import{l as n,P as f,z as m}from"./app-pebjqkCD.js";import{c as g,a as c,b as r,s as x}from"./index.esm-C_1aiQ0x.js";import{e as b}from"./yup-locales.esm-DRsOkZ6u.js";function P(){const d=n({id:0,plate:"",brand:"",model:"",consumption:0,fuel_type:"",pax_number:"",user_id:0,validation:0}),i=n([]),v=g().shape({plate:c().matches(/^[A-Z0-9-]+$/,"Formato de matrícula inválido, debe de ser 1234ABC").required("La matrícula es obligatoria"),brand:c().required("La marca es obligatoria"),model:c().required("El modelo es obligatorio"),consumption:r().positive("El consumo debe ser un número positivo").required("El consumo es obligatorio"),pax_number:r().integer("Debe ser un número entero").positive("Debe ser un número positivo").required("El número de pasajeros es obligatorio"),validation:r().required("La validación es obligatoria").default(0),fuel_type:c().oneOf(["Gasolina","Diésel"],"Tipo de combustible inválido").required("El tipo de combustible es obligatorio")});x(b);const o=n(!1),l=f("$swal"),s=n({}),h=m();return{vehicle:d,vehiclesList:i,vehicleSchema:v,validationErrors:s,isLoading:o,getVehicles:async()=>{i.value.length>0||axios.get("/api/app/user-vehicle").then(a=>{console.log(a.data);for(const e of a.data.data)i.value.push(e)})},getVehiclesAdmin:async()=>{i.value.length>0||axios.get("/api/vehicle/").then(a=>{console.log(a.data);for(const e of a.data.data)i.value.push(e)})},getVehicle:async a=>{o.value||(o.value=!0,s.value={},await axios.get("/api/vehicle/"+a).then(e=>{console.log("Respuesta API obteniendo vehículo: ",e.data.data),d.value=e.data.data}).catch(e=>{var t;(t=e.response)!=null&&t.data&&(s.value=e.response.data.errors)}).finally(()=>o.value=!1))},createVehicle:async a=>{o.value||(o.value=!0,s.value={},axios.post("/api/vehicle/",a.value).then(e=>{console.log("Respuesta API creando vehículo: ",e.data.message),i.value.push(a.value),l({icon:"success",title:"Vehículo guardado satisfactoriamente",text:e.data.message})}).catch(e=>{var t;(t=e.response)!=null&&t.data&&(s.value=e.response.data.errors)}).finally(()=>o.value=!1))},updateVehicle:async a=>{o.value||(o.value=!0,s.value={},await axios.put("/api/vehicle/"+a.value.id,a.value).then(e=>{const t=i.value.findIndex(u=>u.id==a.id);i.value[t]=a,l({icon:"success",title:"Vehicle actualizado con éxito",text:e.data.message})}).catch(e=>{console.log("Error actualizando el vehículo:",e)}).finally(()=>o.value=!1))},deleteVehicle:async a=>{o.value||(o.value=!0,s.value={},l({title:"Estás seguro?",text:"Esta acción no se puede revertir.",icon:"warning",showCancelButton:!0,confirmButtonText:"Aceptar",confirmButtonColor:"#ef4444",timer:2e4,timerProgressBar:!0,reverseButtons:!0}).then(e=>{e.isConfirmed&&axios.delete("/api/vehicle/"+a.id).then(t=>{console.log("Respuesta API actualizando vehículo: ",t.data.message);const u=i.value.findIndex(p=>p.id==a.id);i.value.splice(u,1),h.push({name:"vehicles.index"}),l({icon:"success",title:"Vehicle actualizado con éxito",text:t.data.message})}).catch(t=>{console.log("Error actualizando el vehículo:",t)}).finally(()=>o.value=!1)}))},addVehicle:async a=>{axios.post("/api/vehicle/",a.value).then(e=>{i.value.push(a.value),l({icon:"success",title:"Vehículo guardado satisfactoriamente"})}).catch(e=>{var t;(t=e.response)!=null&&t.data&&(s.value=e.response.data.errors)}).finally(()=>o.value=!1)}}}export{P as u};
